{"version":3,"sources":["components/Header/Header.js","components/ListDetails/ListDetails.js","components/Main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","refreshingData","AppBar","className","position","Typography","variant","color","component","Button","onClick","ListDetails","countries","getCountriesValues","inputval","useEffect","length","map","country","Card","sx","maxWidth","CardMedia","image","flags","alt","flag","CardContent","gutterBottom","name","common","capital","region","subregion","Borders","borders","border","Languages","languages","Object","keys","key","index","population","ccn3","Box","width","LinearProgress","Main","useState","setInputVal","getCountries","fetch","then","response","json","data","setTimeout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAqBeA,MAZf,YAAmC,IAAlBC,EAAiB,EAAjBA,eACb,OACI,cAACC,EAAA,EAAD,CAAQC,UAAU,UAAUC,SAAS,SAArC,SACI,eAACC,EAAA,EAAD,CAAYF,UAAU,MAAMG,QAAQ,KAAKC,MAAM,UAAUC,UAAU,MAAnE,4BAEI,cAACC,EAAA,EAAD,CAAQN,UAAU,SAASI,MAAM,YAAYD,QAAQ,YAAYI,QAAST,EAA1E,2B,gDCuGDU,MA1Gf,YAAsD,IA+C/BC,EA/CDC,EAA+B,EAA/BA,mBAAoBC,EAAW,EAAXA,SA0FtC,OA9EAC,qBAAU,WAEXF,MAEI,IA2EC,gCAEI,qBAAKV,UAAU,WAIf,qBAAKA,UAAU,eAAf,UAlDWS,EAmDME,EAhDjBF,EAAUI,OAUVJ,EAAUK,KAAI,SAAAC,GAAO,OACjB,eAACC,EAAA,EAAD,CAAyBhB,UAAU,OAAOiB,GAAI,CAAEC,SAAU,KAA1D,UACI,cAACC,EAAA,EAAD,CACGnB,UAAU,OACVK,UAAU,MACTe,MAAOL,EAAQM,MAAM,GACrBC,IAAKP,EAAQQ,OAGjB,eAACC,EAAA,EAAD,WACI,cAACtB,EAAA,EAAD,CAAYuB,cAAY,EAACtB,QAAQ,KAAKE,UAAU,MAAhD,SACKU,EAAQW,KAAKC,SAElB,eAACzB,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,sBACcW,EAAQa,QADtB,IAC+B,uBAD/B,WAEab,EAAQc,OAFrB,IAE6B,uBAF7B,eAE+Cd,EAAQe,UAFvD,IAEkE,uBAFlE,YAGa,qBAAK9B,UAAU,SAAf,UAnDhB+B,EAmDmDhB,EAAQiB,QAlDpED,EAMAA,EAAQjB,KAAI,SAACmB,GACZ,OAAO,6BAAkBA,GAATA,MANV,mDA8CK,cAIe,qBAAKjC,UAAU,SAAf,UAvCpBkC,EAuCqDnB,EAAQoB,UAtCpED,EAEQE,OAAOC,KAAKH,GACZpB,KAAI,SAACwB,EAAKC,GAClB,OAAO,6BAAiBL,EAAUI,IAAlBC,MAHb,mDAiCS,eAKiBxB,EAAQyB,WALzB,iBAKkD,+BAjB/CzB,EAAQ0B,MAvBjB,IAACP,EAbEH,KA2BT,cAACW,EAAA,EAAD,CAAK1C,UAAU,WAAWiB,GAAI,CAAE0B,MAAO,QAAvC,SACI,cAACC,EAAA,EAAD,a,MChCDC,MA3Bf,WAAiB,IAAD,EAEgBC,mBAAS,IAFzB,mBAEPnC,EAFO,KAEGoC,EAFH,KAIRC,EAAa,WAEXC,MAAM,4CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAYM,OASxC,OACI,sBAAKrD,UAAU,MAAf,UAEC,cAAC,EAAD,CAAQF,eATY,WACrBiD,EAAY,IACRO,YAAW,WACTN,MACC,QAMN,cAAC,EAAD,CAAatC,mBAAoBsC,EAAcrC,SAAUA,QCb/C4C,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c3824cb2.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Header.css'\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\n\r\nfunction Header({refreshingData}) {\r\n    return (\r\n        <AppBar className=\"app-bar\" position=\"sticky\">\r\n            <Typography className=\"box\" variant=\"h6\" color=\"inherit\" component=\"div\">\r\n                Asian Countries\r\n                <Button className=\"button\" color=\"secondary\" variant=\"contained\" onClick={refreshingData}>Refresh</Button>\r\n            </Typography>\r\n        </AppBar>\r\n      \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect} from 'react'\r\nimport './ListDetails.css'\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\n\r\nfunction ListDetails({getCountriesValues, inputval}) {\r\n //   const [inputval, setInputVal]=useState([]);\r\n\r\n    // const getCountries=()=>{\r\n    //     // GET request using fetch inside useEffect React hook\r\n    //         fetch('https://restcountries.com/v3/region/asia')\r\n    //             .then(response => response.json())\r\n    //             .then(data => setInputVal(data));\r\n        \r\n    // }        \r\n    \r\n\r\n    useEffect(() => {\r\n   //   getCountries();\r\n   getCountriesValues();\r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n    // const refreshCountries=()=>{\r\n    //     setInputVal([]);\r\n    //         setTimeout(() => {\r\n    //           getCountries();\r\n    //         }, 1000);\r\n    // }\r\n\r\n    const getBorder=(Borders)=>{\r\n        if(!Borders){\r\n            return <div>Not Available</div>\r\n        }\r\n   \r\n        return (\r\n            \r\n            Borders.map((border)=>{\r\n             return <li key={border}>{border}</li>\r\n        })\r\n        )\r\n    }\r\n\r\n    const getLang=(Languages)=>{\r\n        if(!Languages)\r\n        return <div>Not Available</div>\r\n        const keys= Object.keys(Languages);\r\n        return keys.map((key, index) => {\r\n            return <li key={index}>{Languages[key]}</li>\r\n        });\r\n\r\n    }\r\n    const showCountry=(countries)=>{\r\n        //displaying the country in a card\r\n        \r\n        if(!countries.length){\r\n            return(\r\n            <Box className=\"progress\" sx={{ width: '100%' }}>\r\n                <LinearProgress /> \r\n            </Box>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            \r\n            countries.map(country =>\r\n                <Card key={country.ccn3} className=\"card\" sx={{ maxWidth: 345 }} >\r\n                    <CardMedia\r\n                       className=\"flag\"\r\n                       component=\"img\"\r\n                        image={country.flags[0]}\r\n                        alt={country.flag}\r\n                     />\r\n\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                            {country.name.common}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Capital: {country.capital} <br/>\r\n                            Region: {country.region} <br/>Sub-region: {country.subregion} <br/>\r\n                            Borders: <div className=\"detail\">{getBorder(country.borders)}</div>\r\n                            Languages: <div className=\"detail\">{getLang(country.languages)}</div>\r\n                            Population: {country.population}Not Avaialble <br/>\r\n                            {/* The population is not available at https://restcountries.com/v3/region/asia */}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                )\r\n                \r\n\r\n        );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"button\">\r\n                {/* this button will refresh the data from the api */}\r\n                {/* <Button variant=\"outlined\" onClick={refreshCountries}>Refresh</Button> */}\r\n            </div>\r\n            <div className=\"list-details\">\r\n                {showCountry(inputval)}          \r\n            \r\n            </div>\r\n        </div>   \r\n        \r\n    )\r\n}\r\n\r\nexport default ListDetails\r\n","import React, { useState } from 'react'\r\nimport Header from '../Header/Header';\r\nimport ListDetails from '../ListDetails/ListDetails';\r\nimport './Main.css'\r\n\r\nfunction Main() {\r\n \r\n  const [inputval, setInputVal]=useState([]);\r\n\r\n  const getCountries=()=>{\r\n      // GET request using fetch inside useEffect React hook\r\n          fetch('https://restcountries.com/v3/region/asia')\r\n              .then(response => response.json())\r\n              .then(data => setInputVal(data));\r\n      \r\n  }\r\n  const refreshCountries=()=>{\r\n    setInputVal([]);\r\n        setTimeout(() => {\r\n          getCountries();\r\n        }, 1000);\r\n}\r\nreturn (\r\n    <div className=\"App\">\r\n     {/* <div><h2>Displaying the asia conuntries</h2></div> */}\r\n     <Header refreshingData={refreshCountries} />\r\n     <ListDetails getCountriesValues={getCountries} inputval={inputval} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Main from './components/Main/Main';\n\n\nfunction App() {\n  return (\n    <div>\n      <Main /> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}